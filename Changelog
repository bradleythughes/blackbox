At the request of some people, here is a Change log starting with 0.33.0.
Enjoy! :)


Changes from 0.35.0 to 0.40.1:
	- cosmetic menu rendering fixes, changed the way the submenu dot is
	  sized; changed an off by one error in drawing the rounded edges;
	  fixed the text to be draw in the center of the item instead of at the
	  bottom
	- major changes to the toolbar (formerly the workspace manager) to
	  change the way it looks and works.  The large blank space is gone,
	  and the toolbar is now half the height it used to be (roughly). the
	  workspace label displays the current workspace, with the workspace
	  menu accessible by clicking button 1 on the label. the two buttons
	  directly to the right of the workspace label change the workspace
	  when pressed. the window label displays the current focused window,
	  which makes it easier to identify which window has input focus (for
	  some people like me that have very dark or very closely colored
	  decorations).  the window menu is accessible by pressing button
	  one on the window label, and selecting an item from the window menu
	  will set input focus to that window (if it can receive focus). the
	  two buttons to the right of the window label circulate focus (up and
	  down, respectively) through the window list, skipping windows that
	  cannot receive focus.  the icon button displays a menu of all
	  iconified applications.  both the icon menu and the window menu will
	  not become visible if they are empty.  the next button on the toolbar
	  is a raise/lower button for the workspace manager. the toolbar is
	  stacked on startup according to the resource set in ~/.blackboxrc,
	  but this button will raise and lower the workspace to the users
	  desire, saving the stack order when blackbox is exited or restarted.
	  the clock is still the same, but editing the session.clockFormat
	  will change it from normal time (session.clockFormat: 12) to 24hour
	  format (session.clockFormat: 24)
	- a pixmap cache has been implemented. a linked list stores all images
	  rendered, removing them from the list and freeing them with the X
	  server when all applications have removed references to them. for
	  those who start man instances of the same applications will benefit
	  greatly from this, as the same decorations are not redraw for each
	  and every window.  this greatly reduces the load on the X server
	  (my X server went from taking 20-28mb of memory to 8-11mb, a dramatic
	  improvement, especially on this 32mb machine).  as a result of this,
	  reconfiguring is faster, as is startup and restarting.
	- click to focus has been implemented, with some restrictions. other
	  window managers allow the user to click anywhere on the decorations
	  OR the client itself to set focus.  i have not found an elegant way
	  to do this yet, so focus can only be set by pressing button 1 on
	  the decorations (like the titlebar, handle, buttons, border, etc.)
	  just not on the client itself.  i am looking more into this, but
	  don't expect anymore than what is in place now.  to use
	  click-to-focus, put session.focusModel: ClickToFocus in ~/.blackboxrc
	- 2 new commands have been added to the menu syntax, [include] and
	  [style]... the [reconfig] command still has the option to reconfigure
	  after a command has been run, but probably will be faded out...
	  [include] (/path/to/file) includes the file inline with the current
	  menu, meaning that a submenu isnot created for the separate file,
	  if a submenu is desired, the file should include the [submenu] and
	  [end] tags explicitly.
	  [style] is a new addition for the style file support. syntax is:
	  [style] (label here) {/path/to/style/file} which will read the new
	  style file and reconfigure when selected.
	- style files have been added to allow for easier switching between
	  configurations.  the style file resources are dramtically different
	  from those in 0.3x.x, see app-defaults/Blackbox-style.ad for an
	  example...
	- with the addition of style files, menus have been given their own
	  justification resource, allowing (for example) menus to be left
	  justified while titles are center or right justified.
	- please read the sample configuration files in app-defaults/ for the
	  new and improved configuration system.  NOTE: Blackbox.ad is a
	  sample ~/.blackboxrc, but you shouldn't copy this file to
	  ~/.blackboxrc, as Blackbox will store the resources it needs
	  automatically
	- an unofficial release numbered 0.40.0 was given out to some beta
	  testers, and even this release needs the same treatment as 0.35.0
          with respect to the new config system (0.40.0 only implemented the
          pixmap cache, the new toolbar and *part* of the new config system,
          but not the style files or automatic generation of ~/.blackboxrc)

	  
Changes from 0.34.5 to 0.35.0:
	- changed the way menus are draw to round both end of the highlight...
	- cosmetic enhancements for the various justifications...
	- this is the first stable release of blackbox


Changes from 0.34.4 to 0.34.5:
	- hopefully... this will be the last bug fix... so i can begin working
	  on new features... i fixed event mask selection on client windows
	  after reparenting them to the decoration frame... this should get
	  xv working again...
	- changed the signal hander to core on sigsegv and sigfpe... sigint and
	  sigterm will just exit blackbox cleanly... sighup will cause blackbox
	  to reconfigure itself
	- changed the way the version string is printed... 


Changes from 0.34.3 to 0.34.4:
	- changed the window stacking code to stack windows and their menus
	  more sanely... window menus are stacked directly ontop of the client
	  windows... instead of on top of every other client window... the
	  workspace manager is now by default stacked above client windows...
	- reworked alot of code in Window.cc, blackbox.cc, Workspace.cc and
	  WorkspaceManager.cc to properly handle ICCCM state hints... the
	  startup and shutdown code has been completely reworked as a result of
	  this

Changes from 0.34.2 to 0.34.3:
	- this was a small change in the code... but a BIG change for the user
	  base... the X error handler is now non fatal... yes... this means if
	  blackbox encounters an X error (like a bad window or a bad match) it
	  will fprintf() the error and continue running... the quick window bug
          has been mostly fixed... i have a small app that i wrote that quickly
	  maps a window, calls XSync()... then destroys the window and exits...
	  the first time i ran this little beauty... blackbox died a horrible
	  death... blackbox now handles this app nicely... but does
	  occasionally report an error (during the decoration creation... which
	  is promptly destroyed from the destroy notify event placed in the
	  queue by the X server... thus... no memory leaks... no memory
	  corruption... blackbox just keeps chugging along nicely


Changes from 0.34.1 to 0.34.2 (unreleased):
	- fixed MSBFirst byte order image rendering at 32bpp (24bpp pending)
          (for machines better than this intel machine of mine)
	- changed BImage to allocate dithering space when the image is created
	  and to delete it when the image is destroyed... instead of allocating
	  the space and deleting the space each time the image is rendered to 
	  an XImage... hopefully this will provide a speed increase (albeit a
	  small one)
	- changed blackbox to call XListPixmapFormats once at startup...
	  instead of each time an image is rendered... this should afford some
	  speed increase (a small one at best :)
	- fixed a bug in Window.cc that re-reads the window name...
          Jon Denardis discovered this bug while playing with netscape 4.5...
          the validation call is now directly before the XFetchName call...
          instead of before an if() { } block that calls strcmp and XFree()
	- edit Window.cc to change the way buttons are decorated and sized
	  the associatedWindow.button.color(To) resources have been removed,
          but the associatedWindow.button texture resource is still there


Changes from 0.34.0 to 0.34.1:
	- fixed the unmanaged rxvt/xconsole/whatever problem that didn't
	  decorate windows at start up... just a little logic error that was
	  fixed with a few braces
	- fixed the shutdown code so that X and blackbox don't die a gruesome
	  death while reparenting the small applets on the workspace manager
	  toolbar... the above bug fixed also fixed a bug that didn't reparent
	  any existing app windows...
	- updated libBox code to allow for flaws in it's design (forgotten from
	  0.34.0)
	- removed #include <sys/select.h> from blackbox.cc so that it compiles
	  on any platform (since select is supposed to be defined in unistd.h)
	- removed the NEED_STRNCASECMP block in blackbox.cc until i can get
	  a working posix like routine to work (needed for OS2 platforms)
	- edited the Imakefile scheme to have the the toplevel Imakefile and 
	  Imakefiles in app-defaults/ lib/ and src/... there now is Imakeconfig
	  which includes all the options in one file... so that editing all
	  the Imakefiles is no longer necessary


Changes from 0.33.6 to 0.34.0:
	- edited some Imakefiles so that rpm creaters have an easier time
	- added stuff to lib/  which contains a small (VERY small) library for
	  letting applications open a window on the workspace manager toolbar
	  this is very very new... restarting will cause the app to crash
	  (at best) or take X with it (the worst)... play with it an let me
	  know how it works
	- further revised window.cc and blackbox.cc to provide better error
	  checking... window.cc received the most updates... validating a
	  window is now done in the statement before the window is used... not
	  at the beginning of the function the window is used in...
	- fixed the stacking order bug when changing workspaces... the windows
	  will now be restored in the order that you left them... not in the
	  order they were created in...
	- updated the README... a little bit anyway :)
	- updated BlackboxWindow::maximizeWindow() in window.cc to properly
	  maximize windows that have specified size increments
	- fixed BlackboxWindow::configureWindow so that shaded windows that re
	  size themselves only resize the titlebar
	- added ccmalloc 0.2.3 to the main source tree to aid in debugging...
	  this is NOT maintained by myself, see the source tree for details
	- eliminated a double delete call with the aid of ccmalloc!@#!
	

Changes from 0.33.5 to 0.33.6:
	- added Makefile.generic for those of you with foobared imake configs.
	  the use of xmkmf -a (i.e. imake) is still prefered... but this should
	  work on any system... with a little editing
	- added static int handleXErrors(Display *, XErrorEvent *) in
          blackbox.cc to handle any and all X lib errors while blackbox is
	  running... this should produce a coredump and thus the beta-moron
	  community should be able to flood my inbox with stack trace upon
	  stack trace :)
	- added some sub directories and moved the sources around, this allows
	  for easier inclusion of the library for blackbox specific programs
	  (which will run in the dock)
	- hopefully fixed the "disappearing-rxvt-trick"... since i can't
	  reproduce it i don't know for sure
	- removed the use of alloca in graphics.cc... i was noticing very odd
	  behaviour from malloc() and free()... where blackbox would sig11 
	  when exiting because of XCloseDisplay doing something naughty...
	  and this seems to have done the trick... no more sig11's from malloc
	  or new... everything i've thrown at blackbox is gently but firmly
	  beaten into submission...
	- added docboy's curved gradient hack as a compile time option... see
	  src/Imakefile and src/graphics.cc


Changes from 0.33.4 to 0.33.5:
	- added a small test to cascade windows that start out partially hidden
	  (like netscape, Xnest, xv, etc.)
	- changed icon handling to include a menu of icons accessible from the
	  workspace manager toolbar
	- deiconifying a window now takes it to the top of the stack
	- clicking on a menuitem that has a submenu no longer hides the submenu
	- added resource "workspaceManager.24hourClock",  a value of True turns
	  on the 24hour clock on the toolbar
	- removed icon pixmap/window/mask support/handling from window.cc and
	  window.hh... since icons are now handled in a menu, this is no
	  longer needed
	- added session.handleWidth and session.bevelWidth
	  to control window sizes (instead of hardcoded defaults)
	- changed parts of Basemenu.cc and WorkspaceManager.cc to follow the
	  sizes set by session.bevelWidth
	- fixed Alt-Tab window switching... also fixed some focus handling bugs
	  which let two windows become focused at the same time (which is bad
	  mojo)


Changes from 0.33.3 to 0.33.4:
	- corrected a typo in the sample Blackbox.ad file to correctly show
	  which resource to set for the menu file
	- added moderate window group support for programs like netscape and 
	  other motif applications... modified window stacking code and
	  internal list code to support window groups (this makes transients
	  behave properly... another step towards more complete ICCCM
	  compliance)
	- modified focus event handlers to stop applications from focusing out
	  when pressing menubars... also window focus is returned to root if 
	  the focus window is closed... if another window is under the focus
	  window when it is closed... that window is awarded input focus
	- fixed tiny little bug that didn't move the close button when resizing
	  a window


Changes from 0.33.2 to 0.33.3: 
	- changed some of the menu code ("updated" in 0.33.1) back to the
	  original 0.33.0, which seems to perform better.  Reason behind it? -
	  blackbox died too often with 0.33.1/2
	- added "Kill Client" option to window menus... for those applications
	  that don't accept the WM_DELETE_WINDOW atom
	- menus that are not partially moved off the root window are shifted to
	  a visible position when the pointer enters the frame... it is also
	  shifted back to it's original position when left (this is new... let
	  me know how it works)


Changes from 0.33.1 to 0.33.2: (unreleased)
	- changed BlackboxIcon to not try and read its config when it was
	  created.  This was forgotten from the 0.31.0 -> 0.33.0 move :/


Changes from 0.33.0 to 0.33.1: (unreleased)
	- improved menu handling, less possibilty for SIGSEGV
	- menus now make copies of all label, exec strings and titles, to
	  make less loose pointers
	- fixed typo to allow submenus of submenus of submenus (...)
	- fixed workspace menu and window list menu placements


Changes from 0.31.0 to 0.33.0:
	- added #ifdef statements so the C preprocessor doesn't complain about
	  _GNU_SOURCE being redefined.
	- changed internal resource data structures
	- added Sticky windows functionality
	- remove old animation code bound with #ifdef ANIMATIONS
	- fixed a silly little bug that sometimes mapped a submenu when its
	  parent was unmapping itself
	- added ExecReconfigure option to execute a shell statement before
	  performing reconfiguration
	- rearranged window config code to reduce wait time while resizing
	- added internal macro BImageNoDitherSolid to make window frame
	  rendering faster (dithering a solid image is silly anyway)
	- added new menu file format
	- added Blackbox::validateWindow to provide a stabler environment for
	  Blackbox.  This gives blackbox more error checking and greater
	  stability.  For me, random crashes have (nearly) disappeared.
	- removed window name/class dependant frame texture/color
	- with 0.31.0, each entity read it's configuration from the rc database
	  loaded at start.  this has changed back to the old behaviour of
	  reading all configuration parameters at start, no database reads are
	  performed after the initial setup (save for reconfiguring).
	- configuration has changed to be a little cleaner, and a little more
          thorough.  See the Blackbox.ad and BlackboxMenu.ad for exmaples.
