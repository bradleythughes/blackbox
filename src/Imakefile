XCOMM Imakefile / Makefile for Blackbox - an X11 Window manager
XCOMM Copyright (c) 1997, 1998 by Brad Hughes, bhughes@arn.net
XCOMM
XCOMM  This program is free software; you can redistribute it and/or modify
XCOMM  it under the terms of the GNU General Public License as published by
XCOMM  the Free Software Foundation; either version 2 of the License, or
XCOMM  (at your option) any later version.
XCOMM
XCOMM  This program is distributed in the hope that it will be useful,
XCOMM  but WITHOUT ANY WARRANTY; without even the implied warranty of
XCOMM  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
XCOMM  GNU General Public License for more details.
XCOMM
XCOMM  You should have received a copy of the GNU General Public License
XCOMM  along with this program; if not, write to the Free Software
XCOMM  Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
XCOMM
XCOMM (See the included file COPYING / GPL-2.0)

#include "../Imakeconfig"

XCOMM Do not edit this file unless you know what you are doing

XCOMM Source files from which blackbox is built

SRCS :=		Application.cc Basemenu.cc Clientmenu.cc LinkedList.cc Rootmenu.cc Window.cc Windowmenu.cc Workspace.cc WorkspaceManager.cc Workspacemenu.cc blackbox.cc graphics.cc icon.cc main.cc
OBJS :=		Application.o  Basemenu.o  Clientmenu.o  LinkedList.o  Rootmenu.o  Window.o  Windowmenu.o  Workspace.o  WorkspaceManager.o  Workspacemenu.o  blackbox.o graphics.o icon.o main.o

LDLIBS :=	$(XLIB) $(EXTENSIONLIB)
CXXFLAGS :=	$(CXXFLAGS) -DXAPPLOADDIR=\"$(XAPPLOADDIR)\"

#ifdef SupportShapeExtension
CXXFLAGS :=	$(CXXFLAGS) -DSHAPE
#endif

#ifdef GradientHack
CXXFLAGS :=	$(CXXFLAGS) -DGradientHack
LDLIBS :=	$(LDLIBS) -lm
#endif

#ifdef MallocDebug
LDLIBS :=       -N $(LDLIBS) ../ccmalloc-0.2.3/src/ccmalloc.o -ldl
#endif

XCOMM
XCOMM Homebrew target for imake - form used from $(CONFIGDUR)/Imake.rules
XCOMM
XCOMM DO NOT EDIT THIS UNLESS YOU KNOW WHAT YOU ARE DOING
XCOMM

#ifdef OS2Architecture
#undef StrcasecmpDefines
#define StrcasecmpDefines	-Dstrcasecmp=stricmp -Dstrncasecmp=strnicmp
#endif

CXXFLAGS :=	$(CXXFLAGS) StrcasecmpDefines

#ifndef CplusplusProgramTargetHelperNoMan
#define CplusplusProgramTargetHelperNoMan(program,srcs,objs,deplib,locallib,syslib) @@\
ProgramTargetName(program): $(objs) $(deplib)                           @@\
	RemoveTargetProgram($@)                                         @@\
	CplusplusLinkRule($@,$(CXXLDOPTIONS),$(objs),locallib $(LDLIBS) syslib) @@\
                                                                        @@\
CenterProgramTarget(program,$(srcs),$(objs),locallib,syslib)            @@\
SentinelCplusplusProgramTarget(program,$(objs) $(deplib),$(objs) locallib $(LDLIBS) syslib) @@\
PurifyCplusplusProgramTarget(program,$(objs) $(deplib),$(objs) locallib $(LDLIBS) syslib) @@\
ProofCplusplusProgramTarget(program,$(objs) $(deplib),$(objs) locallib $(LDLIBS) syslib) @@\
                                                                        @@\
InstallProgram(program,$(BINDIR))
#endif /* CplusplusProgramTargetHelperNoMan */

#ifndef ComplexCplusplusProgramTargetNoMan
#define ComplexCplusplusProgramTargetNoMan(program)                     @@\
	PROGRAM = ProgramTargetName(program)                            @@\
                                                                        @@\
AllTarget(ProgramTargetName(program))                                   @@\
                                                                        @@\
CplusplusProgramTargetHelperNoMan(program,SRCS,OBJS,DEPLIBS,$(LOCAL_LIBRARIES),NullParameter) @@\
                                                                        @@\
DependTarget()                                                          @@\
LintTarget()                                                            @@\
                                                                        @@\
clean::                                                                 @@\
	RemoveFile(ProgramTargetName(program))
#endif /* ComplexCplusplusProgramTargetNoMan */

ComplexCplusplusProgramTargetNoMan(blackbox)

#ifdef MallocDebug
blackbox: .ccmalloc
clean::
	RemoveFile(ccmalloc.log)
#endif
